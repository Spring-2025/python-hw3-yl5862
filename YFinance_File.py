# -*- coding: utf-8 -*-
"""YFinance_File.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1icvCgfemPvcb4EdVtm9AzekOyUwNfOBg
"""

import yfinance as yf
import pandas as pd

def get_stock_data(symbol):
    """
    Downloads stock data from Yahoo Finance and returns adjusted closing prices if available.
    Falls back to 'Close' prices if 'Adj Close' is missing.
    """
    data = yf.download(symbol, progress=False)

    print("Available columns:", data.columns)

    # If data is multi-indexed, extract the correct column
    if isinstance(data.columns, pd.MultiIndex):
        if ('Adj Close', symbol) in data.columns:
            return data[('Adj Close', symbol)].tolist()
        elif ('Close', symbol) in data.columns:
            return data[('Close', symbol)].tolist()
        else:
            raise ValueError("Neither 'Adj Close' nor 'Close' found in the data.")

    # Normal case: Extract single stock data
    if 'Adj Close' in data.columns:
        return data['Adj Close'].tolist()
    elif 'Close' in data.columns:
        return data['Close'].tolist()
    else:
        raise ValueError("Neither 'Adj Close' nor 'Close' found in the data.")

def YahooData2Returns(symbol):
    """
    Fetches stock data and calculates daily percentage returns from 'Adj Close' (or 'Close' if unavailable),
    and returns them as a list.
    """
    try:
        prices = get_stock_data(symbol)

        if len(prices) < 2:
            return []

        returns = [(prices[i] / prices[i - 1]) - 1 for i in range(1, len(prices))]
        return returns
    except Exception as e:
        print(f"Error fetching data for {symbol}: {e}")
        return []

if __name__ == "__main__":
    symbol = "GS"

    stock_returns = YahooData2Returns(symbol)

    if stock_returns:
        print("\nStock Returns (Last 5 values):\n", stock_returns[-5:])